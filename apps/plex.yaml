apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: plex
  annotations:
    avp.kubernetes.io/path: "../secrets.sops.yaml"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  sources:
    - chart: plex-media-server
      repoURL: https://raw.githubusercontent.com/plexinc/pms-docker/gh-pages 
      targetRevision: 0.4.0
      helm:
        version: v3
        valuesObject:
          image:
            repository: plexinc/pms-docker
            tag: 1.41.0.8994-f2c27da23
          ingress:
            enabled: true
            url: <plex| jsonPath {.url}>
            ingressClassName: nginx
            annotations:
              external-dns.alpha.kubernetes.io/hostname: <plex | jsonPath {.url}>
              cert-manager.io/cluster-issuer: "letsencrypt-dns-prod"
          pms:
            configExistingClaim: pvc-plex
          service:
            type: NodePort
          rclone:
            enabled: true
            configSecret: pcloud
            remotes:
              - pcloud:/k8s
          extraEnv:
            PLEX_CLAIM: <plex | jsonPath {.claim}>
    - chart: k8s-resources
      repoURL: https://charts.deliveryhero.io/
      targetRevision: 0.6.6
      helm:
        version: v3
        valuesObject:
          CustomResources:
            - name: pv-plex
              fullnameOverride: pv-plex
              apiVersion: v1
              kind: PersistentVolume
              spec:
               storageClassName: manual
               capacity:
                 storage: 2Gi
               accessModes:
                 - ReadWriteOnce
               hostPath:
                 path: "/mnt/kube/plex"
            - name: pvc-plex
              fullnameOverride: pvc-plex
              apiVersion: v1
              kind: PersistentVolumeClaim
              spec:
               storageClassName: manual
               accessModes:
                 - ReadWriteOnce
               resources:
                  requests:
                    storage: 2Gi
          Secrets:
            - name: pcloud
              fullnameOverride: "pcloud"
              annotations: {}
              extraLabels: {}
              b64Keys:
                rclone.conf: |
                  [pcloud]
                  type = pcloud
                  hostname = eapi.pcloud.com
                  token = {"access_token":"<plex | jsonPath {.pcloud_token}>","token_type":"bearer","expiry":"0001-01-01T00:00:00Z"}
  destination:
    name: "in-cluster"
    namespace: plex
  syncPolicy:
    automated: {}
    syncOptions:
    - CreateNamespace=true
    - ApplyOutOfSyncOnly=true
