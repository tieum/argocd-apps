apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: radarr
  annotations:
    avp.kubernetes.io/path: "../secrets.sops.yaml"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  sources:
    - chart: radarr
      repoURL: tccr.io/truecharts
      targetRevision: 23.9.0
      helm:
        version: v3
        valuesObject:
          cnpg:
            main:
              enabled: true
              user: radarr
              database: radarr
              cluster:
                  storage:
                    size: 1Gi
                    storageClass: longhorn
                  walStorage:
                    size: 1Gi
                    storageClass: longhorn
          workload:
            main:
              podSpec:
                containers:
                  main:
                    env:
                      RADARR__APP__INSTANCENAME: Radarr
                      RADARR__APP__LAUNCHBROWSER: True
                      RADARR__APP__THEME: dark
                      RADARR__AUTH__APIKEY: <radarr | jsonPath {.apiKey}>
                      RADARR__AUTH__METHOD: Forms
                      RADARR__AUTH__REQUIRED: Enabled
                      RADARR__LOG__ANALYTICS_ENABLED: False
                      RADARR__LOG__DBENABLED: False
                      RADARR__LOG__LEVEL: info
                      RADARR__POSTGRES__HOST: radarr-cnpg-main-rw
                      RADARR__POSTGRES__MAINDB: radarr
                      RADARR__POSTGRES__PASSWORD: <radarr | jsonPath {.dbPassword}>
                      RADARR__POSTGRES__PORT: 5432
                      RADARR__POSTGRES__USER: postgres
                      RADARR__SERVER__BINDADDRESS: "*"
                      RADARR__SERVER__ENABLESSL: False
                      RADARR__UPDATE__MECHANISM: Docker
                      RADARR__SERVER__PORT: 7878
                      RADARR__SERVER__SSLCERTPATH: ""
                      RADARR__SERVER__SSLCERTPASSWORD: ""
                      RADARR__SERVER__SSLPORT: 9898
                      RADARR__SERVER__URLBASE: ""
                  exportarr:
                    env:
                      APIKEY: <radarr | jsonPath {.apiKey}>
          persistence:
            config:
              enabled: true
              type: pvc
              storageClass: nfs-client
              size: 1Gi
              mountPath: "/config"
            servarr:
              enabled: true
              type: nfs
              server: <nfs | jsonPath {.ip}>
              path: <nfs | jsonPath {.mountpoint}>
              mountPath: "/servarr"
              accessModes: [ReadWriteMany]
          portal:
            open:
              enabled: false
          updated: false
    - chart: k8s-resources
      repoURL: https://charts.deliveryhero.io/
      targetRevision: 0.6.6
      helm:
        version: v3
        valuesObject:
          Ingresses:
            - name: radarr
              fullnameOverride: radarr
              ingressClassName: nginx
              annotations:
                external-dns.alpha.kubernetes.io/hostname: <radarr | jsonPath {.url}>
                cert-manager.io/cluster-issuer: "letsencrypt-dns-prod"
                nginx.ingress.kubernetes.io/auth-url: "https://<eas | jsonPath {.endpoint}>/verify?redirect_http_code=401&config_token_store_id=primary&config_token_id=github"
                nginx.ingress.kubernetes.io/auth-signin: "https://<eas | jsonPath {.endpoint}>/nginx/auth-signin?rd=$auth_redirect"
                nginx.ingress.kubernetes.io/configuration-snippet: |
                  auth_request_set $auth_redirect $upstream_http_location;
              rules:
                - host: <radarr | jsonPath {.url}>
                  http:
                    paths:
                      - path: /
                        pathType: Prefix
                        backend:
                          service:
                            name: radarr
                            port:
                              number: 7878
              tls:
                 - secretName: radarr-tls
                   hosts:
                     - <radarr | jsonPath {.url}>
  destination:
    name: "in-cluster"
    namespace: radarr
  syncPolicy:
    automated: {}
    syncOptions:
    - CreateNamespace=true
    - ApplyOutOfSyncOnly=true
