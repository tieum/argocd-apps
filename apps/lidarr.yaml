apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: lidarr
  annotations:
    avp.kubernetes.io/path: "../secrets.sops.yaml"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  sources:
    - chart: lidarr
      repoURL: tccr.io/truecharts
      targetRevision: 24.2.1
      helm:
        version: v3
        valuesObject:
          image:
            repository: ghcr.io/hotio/lidarr
            tag: pr-plugins
          workload:
            main:
              podSpec:
                containers:
                  main:
                    probes:
                      liveness:
                        enabled: true
                        type: http
                        path: /ping
                        spec:
                          initialDelaySeconds: 60
                          periodSeconds: 20
                          timeoutSeconds: 15
                          failureThreshold: 10
                          successThreshold: 1
                      readiness:
                        enabled: false
                      startup:
                        enabled: true
                        type: http
                        path: /ping
                    securityContext:
                      readOnlyRootFilesystem: false
                      runAsNonRoot: false
                      runAsUser: 0
                      runAsGroup: 0
                    fixedEnv:
                      S6_READ_ONLY_ROOT: 1
          persistence:
            config:
              enabled: true
              type: pvc
              storageClass: nfs-client
              targetSelector:
                main:
                  main:
                    mountPath: /config
                    size: 100Mi
                  exportarr:
                    mountPath: /config
                    readOnly: true
            servarr:
              enabled: true
              type: nfs
              server: <nfs | jsonPath {.ip}>
              path: <nfs | jsonPath {.mountpoint}>
              mountPath: "/servarr"
              accessModes: [ReadWriteMany]
            slskd-downloads:
              enabled: true
              type: nfs
              server: <nfs | jsonPath {.server}>
              path: <nfs | jsonPath {.path}>/slskd-downloads
              mountPath: "/slskd-downloads"
              accessModes: [ReadWriteMany]
          portal:
            open:
              enabled: false
          updated: false
    - chart: k8s-resources
      repoURL: https://charts.deliveryhero.io/
      targetRevision: 0.6.6
      helm:
        version: v3
        valuesObject:
          Ingresses:
            - name: lidarr
              fullnameOverride: lidarr
              ingressClassName: nginx
              annotations:
                external-dns.alpha.kubernetes.io/hostname: <lidarr | jsonPath {.url}>
                cert-manager.io/cluster-issuer: "letsencrypt-dns-prod"
                nginx.ingress.kubernetes.io/auth-url: "https://<eas | jsonPath {.endpoint}>/verify?redirect_http_code=401&config_token_store_id=primary&config_token_id=github"
                nginx.ingress.kubernetes.io/auth-signin: "https://<eas | jsonPath {.endpoint}>/nginx/auth-signin?rd=$auth_redirect"
                nginx.ingress.kubernetes.io/configuration-snippet: |
                  auth_request_set $auth_redirect $upstream_http_location;
              rules:
                - host: <lidarr | jsonPath {.url}>
                  http:
                    paths:
                      - path: /
                        pathType: Prefix
                        backend:
                          service:
                            name: lidarr
                            port:
                              number: 8686
              tls:
                 - secretName: lidarr-tls
                   hosts:
                     - <lidarr | jsonPath {.url}>
  destination:
    name: "in-cluster"
    namespace: lidarr
  syncPolicy:
    automated: {}
    syncOptions:
    - CreateNamespace=true
    - ApplyOutOfSyncOnly=true
